<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:http-policy="http://www.mulesoft.org/schema/mule/http-policy"
      xmlns:http-transform="http://www.mulesoft.org/schema/mule/http-policy-transform"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
               http://www.mulesoft.org/schema/mule/http-policy http://www.mulesoft.org/schema/mule/http-policy/current/mule-http-policy.xsd
               http://www.mulesoft.org/schema/mule/http-policy-transform http://www.mulesoft.org/schema/mule/http-policy-transform/current/mule-http-policy-transform.xsd">


   <http-policy:source>
            <set-variable variableName="listDomainFilter" value="#[[]]" />
            {{#each listDomainFilter}}
            <set-variable variableName="keyData" value="{{{this.key}}}" />
            <set-variable variableName="valueData" value="{{{this.value}}}" />
            <set-variable variableName="listDomainFilter" value="#[vars.listDomainFilter ++ [{key: vars.keyData, value: vars.valueData}]]" />
            {{/each}}
            <set-variable variableName="whitelistDomainByClientId" value="#[(vars.listDomainFilter filter ((item, index) -> item.key==attributes.headers.client_id)).value[0] default '' ]" />
            <set-variable variableName="allowDomain" value="#[vars.whitelistDomainByClientId splitBy ',' map trim($)]" />
            <set-variable variableName="notAllowDomain" value="#[output application/json --- payload.receivers filter ((item, index) -> not (vars.allowDomain contains  item))]" />
            <set-variable variableName="whitelistDomain" value="#[(vars.listPhoneFilter filter ((item, index) -> item.key==attributes.headers.client_id)).value[0] default '' ]" />

            <choice>
                <when expression="#[(vars.listDomainFilter.key default[] contains attributes.headers.client_id) and sizeOf(vars.notAllowDomain)>0]">
                    <http-transform:set-response statusCode="403">
                        <http-transform:body>#[output application/json --- {'status':0, 'error': 'The Domain is not allowed! ' ++ (vars.notAllowDomain default[] joinBy ",")}]</http-transform:body>
                    </http-transform:set-response>
                </when>
                <otherwise>
                    <http-policy:execute-next />
                </otherwise>
            </choice>

        </http-policy:source>
    </http-policy:proxy>
</mule>
